---
#############################################################
# Import other task lists
- name: Import the tasks specific to Fedora CoreOS
  ansible.builtin.import_tasks: coreos.yml
  when:
    - ansible_facts['os_family'] | lower == 'redhat'
    - ansible_facts['pkg_mgr'] | lower == 'atomic_container'

- name: Import the tasks specific to Docker
  ansible.builtin.import_tasks: docker.yml

- name: Import the tasks specific to networking
  ansible.builtin.import_tasks: networking.yml

# Disabled until it can be scoped down to only hosts that contain a GPU
- name: Import the tasks specific to Fedora CoreOS
  tags: "never"
  ansible.builtin.import_tasks: nvidia_gpu.yml
#############################################################

- name: "QEMU-GA - Create unit for qemu-guest-agent"
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=QEMU Guest Agent
      After=network-online.target
      Wants=network-online.target
      ConditionVirtualization=kvm

      [Service]
      ExecStartPre=docker rm -fv qemu-ga
      ExecStart=docker run --name qemu-ga --privileged --net=host -v /dev:/dev -v /etc/os-release:/etc/os-release:ro docker.io/danskadra/qemu-ga qemu-ga

      [Install]
      WantedBy=multi-user.target
    dest: "/etc/systemd/system/qemu-ga.service"
    mode: "0644"
  when: ansible_facts['pkg_mgr'] | lower == 'atomic_container'

- name: "QEMU-GA - Start QEMU Guest Agent"
  ansible.builtin.systemd_service:
    name: "qemu-ga.service"
    state: "started"
    enabled: true
  when: ansible_facts['pkg_mgr'] | lower == 'atomic_container'

- name: "AutoFS - Copy master template"
  ansible.builtin.template:
    dest: "/etc/auto.master"
    force: true
    mode: "0644"
    src: "templates/auto.master.j2"
  register: autofs_master

- name: "AutoFS - Copy direct map template"
  ansible.builtin.template:
    dest: "/etc/auto-direct.maps"
    force: true
    mode: "0644"
    src: "templates/auto-direct.maps.j2"
  register: autofs_direct

- name: "AutoFS - Copy indirect maps template"
  ansible.builtin.template:
    dest: "/etc/auto-{{ item.clientPath | basename }}.maps"
    force: true
    mode: "0644"
    src: "templates/auto-indirect.maps.j2"
  loop: "{{ nfs_indirect_map }}"
  loop_control: { label: "{{ item.clientPath | basename }}" }
  register: autofs_indirect

- name: "AutoFS - Enable and start the service"
  ansible.builtin.systemd_service:
    enabled: true
    name: "autofs.service"
    state: "{{ 'reloaded' if autofs_master.changed or autofs_direct.changed or autofs_indirect.changed else 'started' }}"
...
