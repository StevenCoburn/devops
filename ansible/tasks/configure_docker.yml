---
- name: "Install Docker on apt-based systems"
  when: ansible_pkg_mgr == "apt"
  block:
    - name: Docker - Import GPG key (apt)
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_facts.distribution | lower }}/gpg"
        state: "present"

    - name: "Docker - Config repo (apt)"
      ansible.builtin.apt_repository:
        repo: "deb https://download.docker.com/linux/{{ ansible_facts.distribution | lower }} {{ ansible_facts.distribution_release }} stable"
        state: "present"

    - name: "Docker - Install (apt)"
      ansible.builtin.apt:
        name:
          - "docker-ce"
          - "docker-ce-cli"
          - "containerd.io"
          - "docker-compose-plugin"
        state: "latest"
        update_cache: true

- name: "Docker - Configure daemon"
  ansible.builtin.template: 
    src: "../templates/dockerdaemon.json.j2"
    dest: "/etc/docker/daemon.json"
  when: ansible_facts['pkg_mgr'] != "atomic_container"
 
- name: "Docker - Start and enable daemon"
  ansible.builtin.systemd:
    name: "docker"
    enabled: true
    state: "started"
    masked: false

- name: "Docker - Set global env vars in /etc/environment"
  ansible.builtin.lineinfile:
    path: "/etc/environment"
    state: "present"
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  loop: "{{ docker_global_environment }}"
  loop_control:
    label: "{{ item.key }}"

- name: "Docker - Set LAN env vars in /etc/environment"
  ansible.builtin.lineinfile:
    path: "/etc/environment"
    state: "present"
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  loop: "{{ docker_lan_environment }}"
  loop_control:
    label: "{{ item.key }}"
  when: infrastructure != 'oci'

- name: "Docker - Set WAN env vars in /etc/environment"
  ansible.builtin.lineinfile:
    path: "/etc/environment"
    state: "present"
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  with_items: "{{ docker_wan_environment }}"
  loop_control:
    label: "{{ item.key }}"
  when: infrastructure == 'oci'

- name: "Docker - Create plugin directory"
  ansible.builtin.file:
    path: "/usr/local/lib/docker/cli-plugins/"
    state: "directory"
    mode: "0755"

- name: "Docker - Install Compose v2 plugin"
  ansible.builtin.get_url:
    url: "https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-{{ ansible_facts.architecture }}"
    dest: "/usr/local/lib/docker/cli-plugins/docker-compose"
    mode: "0755"
    checksum: "sha256:b4e6aff14c30f82ce26e94d37686b5598b3f870ce1e053927c853b4f4b128575"

- name: "Docker - Install Buildx plugin"
  ansible.builtin.get_url:
    url: "https://github.com/docker/buildx/releases/download/v0.11.0/buildx-v0.11.0.linux-amd64"
    dest: "/usr/local/lib/docker/cli-plugins/docker-buildx"
    mode: "0755"
    checksum: "sha256:ec2c9da22c3b733ad96d6a6897750153d884f1b2b86f2864ee5f743ce931055d"
...