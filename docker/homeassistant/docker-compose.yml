---
secrets:
  grafana_admin_password:
    file: ${nfssecrets}/grafana_admin_password

networks:
  external-home-vlan:
    name: ${home_net_name}
    driver: macvlan
    driver_opts:
      parent: vlan${home_net_vlan}
    ipam:
      config:
        - subnet: ${home_net_subnet}
          gateway: ${home_net_gateway}
  external-bridge:
    name: external-bridge
    external: true
  internal-homeassistant:
    name: internal-homeassistant
    internal: true
  internal-iot-vlan:
    name: ${iot_net_name}
    driver: macvlan
    driver_opts:
      parent: vlan${iot_net_vlan}
    ipam:
      config:
        - subnet: ${iot_net_subnet}
          gateway: ${iot_net_gateway}

services:
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:2025.4
    container_name: homeassistant
    restart: unless-stopped
    privileged: false
    security_opt: [no-new-privileges:true]
    depends_on: [homeassistant-db]
    environment:
      TZ: ${TZ}
    volumes:
      - ${nfsapps}/homeassistant/app:/config
    networks:
      # external-home-vlan must be first for Apple Homekit to work
      external-home-vlan:
        ipv4_address: ${homeassistant_home_ip}
      internal-iot-vlan:
        ipv4_address: ${homeassistant_iot_ip}
      internal-homeassistant:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  homeassistant-db:
    image: timescale/timescaledb-ha:pg15
    container_name: homeassistant-db
    restart: unless-stopped
    user: ${NFS_PUID}:${NFS_PGID}
    privileged: false
    security_opt: [no-new-privileges:true]
    networks: [internal-homeassistant]
    volumes:
      - ${nfsapps}/homeassistant/db:/home/postgres/pgdata

  # Port: 1883
  # To add user, in container: mosquitto_passwd -b /mosquitto/config/mqttuser username password
  homeassistant-mqtt:
    image: eclipse-mosquitto:2.0.21
    container_name: homeassistant-mqtt
    restart: unless-stopped
    # network_mode: "container:homeassistant"
    # depends_on: [homeassistant]
    networks: [internal-homeassistant]
    user: ${NFS_PUID}:${NFS_PGID}
    privileged: false
    security_opt: [no-new-privileges:true]
    volumes:
      - ${nfsapps}/homeassistant/mqtt/config:/mosquitto/config
      - ${nfsapps}/homeassistant/mqtt/data:/mosquitto/data
      - ${nfsapps}/homeassistant/mqtt/log:/mosquitto/log

  homeassistant-esphome:
    image: ghcr.io/esphome/esphome:2025.4
    container_name: homeassistant-esphome
    restart: unless-stopped
    networks:
      # internet-capable network must be first to download resources
      external-bridge:
      internal-iot-vlan:
        ipv4_address: ${esphome_ip}
    ports:
      - 6052:6052
    privileged: false
    security_opt: [no-new-privileges:true]
    environment:
      ESPHOME_DASHBOARD_USE_PING: true
      USERNAME: ${ESPHOME_USER}
      PASSWORD: ${ESPHOME_PASSWORD}
    volumes:
      - ${nfsapps}/homeassistant/esphome:/config

  # Port: 8080
  homeassistant-zigbee2mqtt:
    image: koenkk/zigbee2mqtt:2.3.0
    container_name: homeassistant-zigbee2mqtt
    restart: unless-stopped
    networks:
      # internet-capable network must be first if I want Z2M to search for firmware updates
      internal-homeassistant:
      internal-iot-vlan:
        ipv4_address: ${zigbee2mqtt_ip}
    user: ${NFS_PUID}:${NFS_PGID}
    privileged: false
    security_opt: [no-new-privileges:true]
    environment:
      TZ: ${TZ}
    volumes:
      - ${nfsapps}/homeassistant/zigbee2mqtt:/app/data

  # grafana:
  #   image: grafana/grafana-enterprise:10.2.7
  #   container_name: grafana
  #   restart: unless-stopped
  #   privileged: false
  #   security_opt: [no-new-privileges:true]
  #   networks: [internal-homeassistant]
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_admin_password
  #     # GF_SERVER_ROOT_URL: http://my.grafana.server/
  #     # GF_INSTALL_PLUGINS: grafana-clock-panel
  #   secrets:
  #     - grafana_admin_password
  #   volumes:
  #     - ${nfsapps}/homeassistant/grafana:/var/lib/grafana

  # Port: 1880
  # homeassistant-node-red:
  #   image: nodered/node-red:3.1
  #   container_name: homeassistant-node-red
  #   restart: unless-stopped
  #   network_mode: "container:homeassistant"
  #   user: ${NFS_PUID}:${NFS_PGID}
  #   privileged: false
  #   security_opt: [no-new-privileges:true]
  #   volumes:
  #     - ${nfsapps}/homeassistant/nodered:/data

  # Port: 8080
  # homeassistant-vscode:
  #   image: codercom/code-server:debian
  #   container_name: homeassistant-vscode
  #   restart: unless-stopped
  #   network_mode: "container:homeassistant"
  #   user: ${NFS_PUID}:${NFS_PGID}
  #   privileged: false
  #   security_opt: [no-new-privileges:true]
  #   volumes:
  #     # Set <project dir> to the directory you want to open in VS Code.
  #     - <project dir>:/home/coder/project
  #     # <vs code config> should point to a local dir where vs code stores its data.
  #     - <vs code config dir>:/home/coder/.local/share/code-server
  #   command: code-server --auth password --disable-telemetry /home/coder/project
  #   environment:
  #     PASSWORD: "${VSCODE_PASSWORD}"
